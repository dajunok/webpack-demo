@import "//webpack-demo.com:8080/web/css/index.css";
.duohe {
  color: #FF8000;
}
.zhunei {
  color: #5882FA;
}
.container h1 {
  font-size: 25px;
  color: #E45456;
}
.container p {
  font-size: 25px;
  color: #3C7949;
}
.container .myclass h1 {
  font-size: 25px;
  color: #E45456;
}
.container .myclass p {
  font-size: 25px;
  color: #a0ab67;
}
/* 变量 */
/* Mixins语言特性 */
.a {
  color: red;
}
.b {
  color: red;
}
/* 函数 */
.mycolor {
  color: #FF8000;
  width: 100%;
}
/* 命名空间及访问器 */
.myclass {
  font-size: 20px;
  color: green;
}
.myname {
  font-size: 18px;
  color: red;
}
/* Less 变量范围 */
.myclass {
  font-size: "fnord";
  color: green;
}
/* Less 选择器变量 */
p div {
  background: #2ECCFA;
}
#wrap {
  color: #999;
  width: 50%;
}
.wrap {
  color: #ccc;
}
#wrap {
  color: #666;
}
/* Less 属性变量 */
#wrap {
  border-style: solid;
}
.myclass {
  background-color: #81F7D8;
}
/*Less url变量*/
body {
  background: url("../img/dog.png");
}
/*Less 声明变量
  有点类似于 下面的 混合方法
  结构: @name: { 属性: 值 ;};
  使用：@name();
*/
#main {
  background: red;
}
#con {
  width: 200px;
  height: 200px;
  border: solid 1px red;
}
#wrap {
  width: "fnord";
}
#wrap::after {
  content: "I am fnord.";
}
/*嵌套
  1、& 的妙用      & ：代表的上一层选择器的名字，此例便是header。
*/
#header:after {
  content: "Less is more!";
}
#header .title {
  font-weight: bold;
}
#header_content {
  margin: 20px;
}
/*Less Import语句
  import语句可以具有保存路径的变量。当你引用一个普通的父目录时，这是非常有用的。
*/
.myclass {
  color: #A52A2A;
}
/*Less 变量延迟加载
在延迟加载中，即使它们尚未声明，也可以使用变量。
*/
p {
  font-size: 25px;
  color: #ca428b;
}
/*Less 扩展
  Extend是一个LESS伪类，它通过使用:extend 选择器在一个选择器中扩展其他选择器样式。
*/
h2 {
  font-style: italic;
}
.style,h2 {
  background: green;
}
